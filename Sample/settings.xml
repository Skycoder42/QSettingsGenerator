<?xml version="1.0" encoding="UTF-8" ?>
<Settings name="Settings">
	<!-- Additional includes can be added -->
	<Include>mytype.h</Include>
	<Include>gender.h</Include>

	<!-- Basic Nodes with entries -->
	<Node key="gui">
		<Entry key="style" type="QString" default="fusion"/>
		<Node key="mainwindow">
			<Entry key="geometry" type="QByteArray"/>
			<Entry key="state" type="QByteArray"/>
		</Node>
		<!-- The default value of entries can be translated -->
		<!-- The value of the "ts" attribute serves as the context -->
		<Entry key="title" type="QString" default="Hello World!" ts="MainWindow"/>
	</Node>

	<!-- Entries can also contain other nodes -->
	<Entry key="generator" type="bool" default="true">
		<Node key="sources">
			<Entry key="normal" type="QString"/>
			<Entry key="extended" type="QString"/>
		</Node>
		<Entry key="timeout" type="int" default="5000"/>
	</Entry>

	<!-- Furthermore you can include C++ code for defaults that cannot easily be represented as a string -->
	<Entry key="myType" type="MyType">
		<Code>
			MyType {true, 42, MyType::someFunc("test")}
		</Code>
	</Entry>

	<Mapping type="User">
		<Node key="name">
			<Entry key="first" type="QString"/>
			<Entry key="last" type="QString"/>
		</Node>
		<Entry key="age" type="int"/>
		<Entry key="gender" type="Gender">
			<Entry key="special" type="bool"/>
		</Entry>

		<!-- Defines a method body to convert from the (virtual) settings entry to the datatype in C++ code -->
		<Read>
			return User { name.first, name.last, age, gender, gender.special };
		</Read>
		<!-- Defines a method body to convert from the datatype to the (virtual) settings entry in C++ code -->
		<Write param="user">
			name.first = user.firstname;
			name.last = user.lastname;
			age = user.age;
			gender = user.gender;
			gender.special = user.isSpecial();
		</Write>
	</Mapping>

	<Node key="users">
		<Entry key="current" type="User">
			<Code>
				User { "Lucas", "Sacul", 22, Gender::Male, true }
			</Code>
		</Entry>

		<!-- Another special node is the array - it's a simple way to create a convenient wrapper around the standard settings array -->
		<!-- The only limitation here is, that the array must be statically typed and that type must be a mapped type-->
		<Array key="all" type="User">
			<!-- Specify default array elements as additional Element entries of the array -->
			<Element>
				User { "Lucas", "Sacul", 22, Gender::Male, true }
			</Element>
			<Element>
				User { "Stacy", "Ycats" }
			</Element>
		</Array>
	</Node>
</Settings>
